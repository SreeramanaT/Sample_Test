    1  amazon-linux-extras install epel -y
    2  yum install -y git tree vim
    3  wget https://releases.hashicorp.com/terraform/0.12.23/terraform_0.12.23_linux_amd64.zip
    4  unzip terraform_0.12.23_linux_amd64.zip
    5  ls
    6  mv ./terraform /usr/bin
    7  ls
    8  which terraform
    9  terraform --version
   10  cls
   11  terraform init
   12  sudo yum install -y python3
   13  curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
   14  ls
   15  unzip awscliv2.zip
   16  ls
   17  sudo ./aws/install
   
   --setting the path temporarily
   18  export PATH=$PATH:/usr/local/aws-cli/v2/2.0.3/bin
   19  echo $PATH
   20  which aws
   21  aws --version
   
   -- to add permanently to the path do below steps
   22  vim /root/.bashrc
   and add at the end of that file
   export PATH=$PATH:/usr/local/aws-cli/v2/2.0.3/bin
   
   24  git clone https://github.com/tektutor/terraform-hyd-march-2020.git

   26  cd terraform-hyd-march-2020/

   29  cd Day2

   31  cd vpc-lab/

   33  terraform init

   34  aws configure
[root@ip-172-31-42-202 vpc-lab]# aws configure
AWS Access Key ID [****************GI7N]: AKIA2RLIAWXT6HKKGI7N
AWS Secret Access Key [None]: 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
Default region name [rjgU8FHNys5Tx0GFsZCFyJnJ+ZV+fpyndbI01DEo]: us-east-1
Default output format [None]: None
[root@ip-172-31-42-202 vpc-lab]#


[root@ip-172-31-42-202 vpc-lab]# vim create-aws-vpc-and-subnets.tf
---------------------
#START
#-----
# This helps terraform download the necessary aws provider plugin to interact with your aws account
provider "aws" {
        region = "us-east-1"
}

# Create your own AWS Virtual Private Networking using VPC
#resource "aws_vpc" "VPC2" {
#       cidr_block = "162.178.0.0/16"
#       instance_tenancy = "default"
#       enable_dns_support = "true"
#       enable_dns_hostnames = "true"
#
#       tags = {
#           Name =  "VPC2"
#       }
#}

# Create your public subnet here
resource "aws_subnet" "srt_public_subnet_1" {
     #  vpc_id = aws_vpc.VPC2.id
        vpc_id = "vpc-02565ffafb9b917d3"
        cidr_block = "162.178.3.0/24"
        map_public_ip_on_launch = "true"
        availability_zone = "us-east-1a"

        tags = {
                Name = "srt_public_subnet_1"
        }
}

# Create your private subnet here
resource "aws_subnet" "srt_private_subnet_1" {
     #  vpc_id = aws_vpc.VPC2.id
        vpc_id = "vpc-02565ffafb9b917d3"
        cidr_block  = "162.178.24.0/24"
        map_public_ip_on_launch = "false"

        tags = {
                Name = "srt_private_subnet_1"
        }
}

#END
#----

** To destroy what was created earlier use the command as below
[root@ip-172-31-42-202 vpc-lab]# terraform destroy

[root@ip-172-31-42-202 vpc-lab]# ls
create-aws-vpc-and-subnets.tf  terraform.tfstate  terraform.tfstate.backup

** untill we have the tfstate new resources will not be created. if we delete teh tfstate file and apply the terraform new resources will be created again



